name: Main

env:
  PYTHON_VERSION: 3.13.3

on:
  pull_request:
    paths:
      - "**/**"
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
    tags:
      - "**/**"

jobs:
  label-pr:
    name: Label PR
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request }}
    permissions:
      contents: read
      pull-requests: write
    outputs:
      labels: ${{ steps.pr_labeler.outputs.all-labels }}
    steps:
      - name: PR labeler 🏷
        id: pr_labeler
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yaml
          sync-labels: true
          dot: true
      - name: Show labels 👀
        id: show_labels
        run: |
          echo "ALL_LABELS:" ${{ steps.pr_labeler.outputs.all-labels }}
          echo "NEW_LABELS:" ${{ steps.pr_labeler.outputs.new-labels }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Python 🐍
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup pipenv 🌴
        id: setup_pipenv
        run: |
          pip install pipenv
          pipenv install --system --dev
      - name: Run YAML lint 🧪
        id: run_yaml_lint
        run: yamllint -c .yamllint.yaml .
      - name: Run Markdown lint 🧪
        id: run_markdown_lint
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          config: .markdownlint.yaml
          globs: .
      - name: Run isort 🧪
        id: run_isort
        run: isort --check-only --diff --verbose --color --sp .isort.cfg .

  spell-check:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        id: checkout
        uses: actions/checkout@v4
      - name: Run CSpell
        id: run_spell_checking
        uses: streetsidesoftware/cspell-action@v7
        with:
          root: .
          check_dot_files: true
          inline: error
          strict: true
          config: .cspell.json
          verbose: true
          incremental_files_only: false

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs:
      - label-pr
      - lint
      - spell-check
    steps:
      - name: Checkout 🛎️
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Python 🐍
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup pipenv 🌴
        id: setup_pipenv
        run: |
          pip install pipenv
          pipenv install --system --dev
      - name: Run unit tests 🧪
        id: run_unit_tests
        run: |
          pipenv run pytest

  run-examples:
    name: Run examples
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    steps:
      - name: Checkout 🛎️
        id: checkout
        uses: actions/checkout@v4
      - name: Setup Python 🐍
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup environment 🌴
        id: setup_environment
        run: |
          pip install pipenv
          pipenv install --system --dev
          pip list
      - name: Run examples 🧪
        run: |
          for f in examples/*.py; do
            module="examples.$(basename "$f" .py)"
            echo "==> Running $module..."
            python -m "$module"
          done
